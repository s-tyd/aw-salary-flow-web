"""Add calculation periods and new table structure

Revision ID: 5d8ae3521332
Revises: bcc93efca905
Create Date: 2025-05-31 05:28:50.598666

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5d8ae3521332'
down_revision: Union[str, None] = 'bcc93efca905'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calculation_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('month', sa.Integer(), nullable=False),
    sa.Column('period_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_calculation_periods_id'), 'calculation_periods', ['id'], unique=False)
    op.create_index(op.f('ix_calculation_periods_month'), 'calculation_periods', ['month'], unique=False)
    op.create_index(op.f('ix_calculation_periods_year'), 'calculation_periods', ['year'], unique=False)
    op.create_table('expense_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_period_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('expense_date', sa.Date(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('receipt_file_path', sa.String(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('freee_transaction_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_period_id'], ['calculation_periods.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expense_records_id'), 'expense_records', ['id'], unique=False)
    op.create_table('kiwigo_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_period_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('report_type', sa.String(), nullable=True),
    sa.Column('score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('evaluation', sa.String(), nullable=True),
    sa.Column('report_data', sa.JSON(), nullable=True),
    sa.Column('report_file_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_period_id'], ['calculation_periods.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_kiwigo_reports_id'), 'kiwigo_reports', ['id'], unique=False)
    op.create_table('salary_calculations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_period_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('base_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('overtime_pay', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transportation_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('remote_allowance', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_gross', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('deductions', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('net_salary', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('calculation_details', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_period_id'], ['calculation_periods.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_salary_calculations_id'), 'salary_calculations', ['id'], unique=False)
    op.create_table('template_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_period_id', sa.Integer(), nullable=True),
    sa.Column('excel_template_id', sa.Integer(), nullable=True),
    sa.Column('usage_type', sa.String(), nullable=True),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('used_by_user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_period_id'], ['calculation_periods.id'], ),
    sa.ForeignKeyConstraint(['excel_template_id'], ['excel_templates.id'], ),
    sa.ForeignKeyConstraint(['used_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_template_usage_id'), 'template_usage', ['id'], unique=False)
    op.create_table('transportation_expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calculation_period_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('usage_date', sa.Date(), nullable=True),
    sa.Column('departure', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=True),
    sa.Column('purpose', sa.String(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('data_source', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['calculation_period_id'], ['calculation_periods.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transportation_expenses_id'), 'transportation_expenses', ['id'], unique=False)
    op.add_column('employees', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('employees', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('employees', 'hire_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.alter_column('employees', 'resignation_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.add_column('excel_templates', sa.Column('template_type', sa.String(), nullable=True))
    op.add_column('excel_templates', sa.Column('version', sa.String(), nullable=True))
    op.add_column('excel_templates', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('excel_templates', sa.Column('created_by_user_id', sa.Integer(), nullable=True))
    op.drop_constraint('excel_templates_employee_id_fkey', 'excel_templates', type_='foreignkey')
    op.create_foreign_key(None, 'excel_templates', 'users', ['created_by_user_id'], ['id'])
    op.drop_column('excel_templates', 'employee_id')
    op.add_column('work_data', sa.Column('calculation_period_id', sa.Integer(), nullable=True))
    op.add_column('work_data', sa.Column('data_source', sa.String(), nullable=True))
    op.add_column('work_data', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.alter_column('work_data', 'work_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True)
    op.create_foreign_key(None, 'work_data', 'calculation_periods', ['calculation_period_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'work_data', type_='foreignkey')
    op.alter_column('work_data', 'work_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('work_data', 'updated_at')
    op.drop_column('work_data', 'data_source')
    op.drop_column('work_data', 'calculation_period_id')
    op.add_column('excel_templates', sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'excel_templates', type_='foreignkey')
    op.create_foreign_key('excel_templates_employee_id_fkey', 'excel_templates', 'employees', ['employee_id'], ['id'])
    op.drop_column('excel_templates', 'created_by_user_id')
    op.drop_column('excel_templates', 'is_active')
    op.drop_column('excel_templates', 'version')
    op.drop_column('excel_templates', 'template_type')
    op.alter_column('employees', 'resignation_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('employees', 'hire_date',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('employees', 'updated_at')
    op.drop_column('employees', 'is_active')
    op.drop_index(op.f('ix_transportation_expenses_id'), table_name='transportation_expenses')
    op.drop_table('transportation_expenses')
    op.drop_index(op.f('ix_template_usage_id'), table_name='template_usage')
    op.drop_table('template_usage')
    op.drop_index(op.f('ix_salary_calculations_id'), table_name='salary_calculations')
    op.drop_table('salary_calculations')
    op.drop_index(op.f('ix_kiwigo_reports_id'), table_name='kiwigo_reports')
    op.drop_table('kiwigo_reports')
    op.drop_index(op.f('ix_expense_records_id'), table_name='expense_records')
    op.drop_table('expense_records')
    op.drop_index(op.f('ix_calculation_periods_year'), table_name='calculation_periods')
    op.drop_index(op.f('ix_calculation_periods_month'), table_name='calculation_periods')
    op.drop_index(op.f('ix_calculation_periods_id'), table_name='calculation_periods')
    op.drop_table('calculation_periods')
    # ### end Alembic commands ###
